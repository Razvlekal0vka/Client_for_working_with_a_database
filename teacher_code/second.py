# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
import psycopg2
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *

DB_HOST = "127.0.0.1"
DB_NAME = "telspr"
DB_USER = "postgres"
DB_PASS = "sql"


def process_cmd(cmd):
    conn = psycopg2.connect(host=DB_HOST, database=DB_NAME, user=DB_USER, password=DB_PASS)
    cur = conn.cursor()
    cur.execute(cmd)
    try:
        rows = cur.fetchall()
    except:
        conn.commit()
        conn.close()
        cur.close()
        return True
    conn.commit()
    conn.close()
    cur.close()
    return rows if rows else []

def get_combo(cmd):
    rows = process_cmd(cmd)
    rows = [row[0].strip() for row in rows]
    return rows

#app=QApplication([])
app = QtWidgets.QApplication(sys.argv)

class Ui_MainWindow(QtWidgets.QMainWindow):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(462, 394)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.comboBox1 = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox1.addItems([''] + get_combo('select f_val from fam'))
        self.comboBox1.setGeometry(QtCore.QRect(50, 40, 69, 22))
        self.comboBox1.setObjectName("comboBox1")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 892, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)




#button=QPushButton('Click')
def on_add_clicked():
    alert=QMessageBox()
    alert.setText('clicked add')
    alert.exec_()

#button.clicked.connect(on_add_clicked)
#button.show()
if __name__ == "__main__":
#    import sys
#    app = QtWidgets.QApplication(sys.argv)
#    MainWindow = QtWidgets.QMainWindow()
#    ui = Ui_MainWindow()
#    ui.setupUi(MainWindow)
#    MainWindow.show()
    cmd='select * from fam'
    rec=process_cmd(cmd)
    print (rec)
    #    button=QPushButton('add')
    #    button.clicked.connect(on_add_clicked)
    #    button.show()
    sys.exit(app.exec_())

